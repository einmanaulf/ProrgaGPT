"""Initial migration

Revision ID: 4dd408dbf0ab
Revises: 
Create Date: 2024-07-16 22:19:07.285685

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '4dd408dbf0ab'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('consumables',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('identifier', sa.String(length=50), nullable=False),
    sa.Column('last_modified', sa.DateTime(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('identifier')
    )
    op.create_table('funds',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('identifier', sa.String(length=50), nullable=False),
    sa.Column('last_modified', sa.DateTime(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('identifier')
    )
    op.create_table('materials',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('identifier', sa.String(length=50), nullable=False),
    sa.Column('last_modified', sa.DateTime(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('identifier')
    )
    op.create_table('projects',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('identifier', sa.String(length=50), nullable=False),
    sa.Column('last_modified', sa.DateTime(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('goal', sa.Text(), nullable=True),
    sa.Column('principle', sa.Text(), nullable=True),
    sa.Column('protocol_text', sa.Text(), nullable=True),
    sa.Column('time_required', sa.Float(), nullable=True),
    sa.Column('time_required_unit', sa.String(length=20), nullable=True),
    sa.Column('funding', sa.Float(), nullable=True),
    sa.Column('benefits', sa.Float(), nullable=True),
    sa.Column('time_to_sell', sa.Float(), nullable=True),
    sa.Column('time_to_sell_unit', sa.String(length=20), nullable=True),
    sa.Column('due_date', sa.Date(), nullable=True),
    sa.Column('planned_date', sa.Date(), nullable=True),
    sa.Column('urgency', sa.Float(), nullable=True),
    sa.Column('impact', sa.Float(), nullable=True),
    sa.Column('resources', sa.Float(), nullable=True),
    sa.Column('complexity', sa.Float(), nullable=True),
    sa.Column('alignment', sa.Float(), nullable=True),
    sa.Column('priority', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('identifier')
    )
    op.create_table('protections',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('identifier', sa.String(length=50), nullable=False),
    sa.Column('last_modified', sa.DateTime(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('identifier')
    )
    op.create_table('tasks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('project_prerequisites',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=True),
    sa.Column('prerequisite_id', sa.Integer(), nullable=True),
    sa.Column('prerequisite_type', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('project_resources',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=True),
    sa.Column('resource_id', sa.Integer(), nullable=True),
    sa.Column('resource_type', sa.String(length=50), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('protocols',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('identifier', sa.String(length=50), nullable=False),
    sa.Column('last_modified', sa.DateTime(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('goal', sa.Text(), nullable=True),
    sa.Column('principle', sa.Text(), nullable=True),
    sa.Column('protocol_text', sa.Text(), nullable=True),
    sa.Column('time_required', sa.Float(), nullable=True),
    sa.Column('time_required_unit', sa.String(length=20), nullable=True),
    sa.Column('funding', sa.Float(), nullable=True),
    sa.Column('benefits', sa.Float(), nullable=True),
    sa.Column('time_to_sell', sa.Float(), nullable=True),
    sa.Column('time_to_sell_unit', sa.String(length=20), nullable=True),
    sa.Column('project_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('identifier')
    )
    op.create_table('task_prerequisites',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=True),
    sa.Column('prerequisite_id', sa.Integer(), nullable=True),
    sa.Column('prerequisite_type', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['prerequisite_id'], ['tasks.id'], ),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('task_resources',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=True),
    sa.Column('resource_id', sa.Integer(), nullable=True),
    sa.Column('resource_type', sa.String(length=50), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('protocol_prerequisites',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('protocol_id', sa.Integer(), nullable=True),
    sa.Column('prerequisite_id', sa.Integer(), nullable=True),
    sa.Column('prerequisite_type', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['protocol_id'], ['protocols.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('protocol_resources',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('protocol_id', sa.Integer(), nullable=True),
    sa.Column('resource_id', sa.Integer(), nullable=True),
    sa.Column('resource_type', sa.String(length=50), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['protocol_id'], ['protocols.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('protocol_resources')
    op.drop_table('protocol_prerequisites')
    op.drop_table('task_resources')
    op.drop_table('task_prerequisites')
    op.drop_table('protocols')
    op.drop_table('project_resources')
    op.drop_table('project_prerequisites')
    op.drop_table('tasks')
    op.drop_table('protections')
    op.drop_table('projects')
    op.drop_table('materials')
    op.drop_table('funds')
    op.drop_table('consumables')
    # ### end Alembic commands ###
