"""Initial migration.

Revision ID: ea8533f466f0
Revises: 
Create Date: 2024-05-30 15:59:36.025227

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'ea8533f466f0'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('consumable',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('funds',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('material',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('project',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('goal', sa.Text(), nullable=True),
    sa.Column('principle', sa.Text(), nullable=True),
    sa.Column('protocol', sa.Text(), nullable=True),
    sa.Column('time_required', sa.String(length=50), nullable=True),
    sa.Column('time_required_unit', sa.String(length=20), nullable=True),
    sa.Column('funding', sa.Float(), nullable=True),
    sa.Column('benefits', sa.Float(), nullable=True),
    sa.Column('time_to_sell', sa.String(length=50), nullable=True),
    sa.Column('time_to_sell_unit', sa.String(length=20), nullable=True),
    sa.Column('due_date', sa.Date(), nullable=True),
    sa.Column('planned_date', sa.Date(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('protection',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('project_consumable_association',
    sa.Column('project_id', sa.Integer(), nullable=True),
    sa.Column('consumable_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['consumable_id'], ['consumable.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], )
    )
    op.create_table('project_material_association',
    sa.Column('project_id', sa.Integer(), nullable=True),
    sa.Column('material_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['material_id'], ['material.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], )
    )
    op.create_table('project_project_association',
    sa.Column('project_id', sa.Integer(), nullable=True),
    sa.Column('prerequisite_project_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['prerequisite_project_id'], ['project.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], )
    )
    op.create_table('project_protection_association',
    sa.Column('project_id', sa.Integer(), nullable=True),
    sa.Column('protection_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
    sa.ForeignKeyConstraint(['protection_id'], ['protection.id'], )
    )
    op.create_table('task',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=True),
    sa.Column('is_done', sa.Boolean(), nullable=True),
    sa.Column('due_date', sa.Date(), nullable=True),
    sa.Column('planned_date', sa.Date(), nullable=True),
    sa.Column('recurrence', sa.String(length=100), nullable=True),
    sa.Column('time_required', sa.Float(), nullable=True),
    sa.Column('time_required_unit', sa.String(length=20), nullable=True),
    sa.Column('funding', sa.Float(), nullable=True),
    sa.Column('benefits', sa.Float(), nullable=True),
    sa.Column('time_to_sell', sa.Float(), nullable=True),
    sa.Column('time_to_sell_unit', sa.String(length=20), nullable=True),
    sa.Column('urgency', sa.Float(), nullable=True),
    sa.Column('impact', sa.Float(), nullable=True),
    sa.Column('resources', sa.Float(), nullable=True),
    sa.Column('complexity', sa.Float(), nullable=True),
    sa.Column('alignment', sa.Float(), nullable=True),
    sa.Column('priority', sa.Float(), nullable=True),
    sa.Column('order', sa.Integer(), nullable=True),
    sa.Column('is_daily', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('task_consumable_association',
    sa.Column('task_id', sa.Integer(), nullable=True),
    sa.Column('consumable_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['consumable_id'], ['consumable.id'], ),
    sa.ForeignKeyConstraint(['task_id'], ['task.id'], )
    )
    op.create_table('task_material_association',
    sa.Column('task_id', sa.Integer(), nullable=True),
    sa.Column('material_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['material_id'], ['material.id'], ),
    sa.ForeignKeyConstraint(['task_id'], ['task.id'], )
    )
    op.create_table('task_protection_association',
    sa.Column('task_id', sa.Integer(), nullable=True),
    sa.Column('protection_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['protection_id'], ['protection.id'], ),
    sa.ForeignKeyConstraint(['task_id'], ['task.id'], )
    )
    op.create_table('task_task_association',
    sa.Column('task_id', sa.Integer(), nullable=True),
    sa.Column('prerequisite_task_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['prerequisite_task_id'], ['task.id'], ),
    sa.ForeignKeyConstraint(['task_id'], ['task.id'], )
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('task_task_association')
    op.drop_table('task_protection_association')
    op.drop_table('task_material_association')
    op.drop_table('task_consumable_association')
    op.drop_table('task')
    op.drop_table('project_protection_association')
    op.drop_table('project_project_association')
    op.drop_table('project_material_association')
    op.drop_table('project_consumable_association')
    op.drop_table('protection')
    op.drop_table('project')
    op.drop_table('material')
    op.drop_table('funds')
    op.drop_table('consumable')
    # ### end Alembic commands ###
